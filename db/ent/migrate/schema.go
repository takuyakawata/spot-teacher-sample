// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CompaniesColumns holds the columns for the "companies" table.
	CompaniesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "name", Type: field.TypeString, Size: 50},
		{Name: "prefecture", Type: field.TypeInt},
		{Name: "city", Type: field.TypeString},
		{Name: "street", Type: field.TypeString, Nullable: true},
		{Name: "post_code", Type: field.TypeString, Size: 7},
		{Name: "phone_number", Type: field.TypeString},
		{Name: "url", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// CompaniesTable holds the schema information for the "companies" table.
	CompaniesTable = &schema.Table{
		Name:       "companies",
		Columns:    CompaniesColumns,
		PrimaryKey: []*schema.Column{CompaniesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "company_name",
				Unique:  false,
				Columns: []*schema.Column{CompaniesColumns[1]},
			},
		},
	}
	// EducationCategoriesColumns holds the columns for the "education_categories" table.
	EducationCategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "code", Type: field.TypeString, Unique: true},
		{Name: "lesson_schedule_education_categories", Type: field.TypeInt64, Nullable: true},
	}
	// EducationCategoriesTable holds the schema information for the "education_categories" table.
	EducationCategoriesTable = &schema.Table{
		Name:       "education_categories",
		Columns:    EducationCategoriesColumns,
		PrimaryKey: []*schema.Column{EducationCategoriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "education_categories_lesson_schedules_education_categories",
				Columns:    []*schema.Column{EducationCategoriesColumns[3]},
				RefColumns: []*schema.Column{LessonSchedulesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "educationcategory_name",
				Unique:  false,
				Columns: []*schema.Column{EducationCategoriesColumns[1]},
			},
			{
				Name:    "educationcategory_code",
				Unique:  false,
				Columns: []*schema.Column{EducationCategoriesColumns[2]},
			},
		},
	}
	// EmailVerificationsColumns holds the columns for the "email_verifications" table.
	EmailVerificationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "token", Type: field.TypeString, Unique: true},
		{Name: "expired_at", Type: field.TypeTime},
	}
	// EmailVerificationsTable holds the schema information for the "email_verifications" table.
	EmailVerificationsTable = &schema.Table{
		Name:       "email_verifications",
		Columns:    EmailVerificationsColumns,
		PrimaryKey: []*schema.Column{EmailVerificationsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "emailverification_expired_at",
				Unique:  false,
				Columns: []*schema.Column{EmailVerificationsColumns[5]},
			},
			{
				Name:    "emailverification_token",
				Unique:  false,
				Columns: []*schema.Column{EmailVerificationsColumns[4]},
			},
			{
				Name:    "emailverification_email",
				Unique:  false,
				Columns: []*schema.Column{EmailVerificationsColumns[3]},
			},
		},
	}
	// GradesColumns holds the columns for the "grades" table.
	GradesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "code", Type: field.TypeString, Unique: true},
		{Name: "lesson_schedule_grades", Type: field.TypeInt64, Nullable: true},
	}
	// GradesTable holds the schema information for the "grades" table.
	GradesTable = &schema.Table{
		Name:       "grades",
		Columns:    GradesColumns,
		PrimaryKey: []*schema.Column{GradesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "grades_lesson_schedules_grades",
				Columns:    []*schema.Column{GradesColumns[3]},
				RefColumns: []*schema.Column{LessonSchedulesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "grade_name",
				Unique:  false,
				Columns: []*schema.Column{GradesColumns[1]},
			},
			{
				Name:    "grade_code",
				Unique:  false,
				Columns: []*schema.Column{GradesColumns[2]},
			},
		},
	}
	// InquiriesColumns holds the columns for the "inquiries" table.
	InquiriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "category", Type: field.TypeEnum, Enums: []string{"LESSON", "RESERVATION", "CANCELLATION", "OTHER"}, Default: "OTHER"},
		{Name: "inquiry_detail", Type: field.TypeString, Size: 2147483647},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "lesson_schedule_id", Type: field.TypeInt64},
		{Name: "school_id", Type: field.TypeInt64},
		{Name: "user_id", Type: field.TypeInt64},
	}
	// InquiriesTable holds the schema information for the "inquiries" table.
	InquiriesTable = &schema.Table{
		Name:       "inquiries",
		Columns:    InquiriesColumns,
		PrimaryKey: []*schema.Column{InquiriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "inquiries_lesson_plans_lesson",
				Columns:    []*schema.Column{InquiriesColumns[6]},
				RefColumns: []*schema.Column{LessonPlansColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "inquiries_schools_school",
				Columns:    []*schema.Column{InquiriesColumns[7]},
				RefColumns: []*schema.Column{SchoolsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "inquiries_users_teacher",
				Columns:    []*schema.Column{InquiriesColumns[8]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "inquiry_lesson_schedule_id",
				Unique:  false,
				Columns: []*schema.Column{InquiriesColumns[6]},
			},
			{
				Name:    "inquiry_school_id",
				Unique:  false,
				Columns: []*schema.Column{InquiriesColumns[7]},
			},
			{
				Name:    "inquiry_user_id",
				Unique:  false,
				Columns: []*schema.Column{InquiriesColumns[8]},
			},
			{
				Name:    "inquiry_category",
				Unique:  false,
				Columns: []*schema.Column{InquiriesColumns[1]},
			},
			{
				Name:    "inquiry_created_at",
				Unique:  false,
				Columns: []*schema.Column{InquiriesColumns[4]},
			},
		},
	}
	// LessonPlansColumns holds the columns for the "lesson_plans" table.
	LessonPlansColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "title", Type: field.TypeString, Size: 500},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2000},
		{Name: "location", Type: field.TypeString, Nullable: true, Size: 500},
		{Name: "lesson_type", Type: field.TypeEnum, Enums: []string{"online", "offline", "online_and_offline"}},
		{Name: "annual_max_executions", Type: field.TypeInt},
		{Name: "start_month", Type: field.TypeInt},
		{Name: "start_day", Type: field.TypeInt},
		{Name: "end_month", Type: field.TypeInt},
		{Name: "end_day", Type: field.TypeInt},
		{Name: "start_time", Type: field.TypeTime},
		{Name: "end_time", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "company_id", Type: field.TypeInt64},
	}
	// LessonPlansTable holds the schema information for the "lesson_plans" table.
	LessonPlansTable = &schema.Table{
		Name:       "lesson_plans",
		Columns:    LessonPlansColumns,
		PrimaryKey: []*schema.Column{LessonPlansColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "lesson_plans_companies_lesson_plans",
				Columns:    []*schema.Column{LessonPlansColumns[14]},
				RefColumns: []*schema.Column{CompaniesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "lessonplan_company_id",
				Unique:  false,
				Columns: []*schema.Column{LessonPlansColumns[14]},
			},
			{
				Name:    "lessonplan_title",
				Unique:  false,
				Columns: []*schema.Column{LessonPlansColumns[1]},
			},
		},
	}
	// LessonReservationsColumns holds the columns for the "lesson_reservations" table.
	LessonReservationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "lesson_schedule_id", Type: field.TypeInt64},
		{Name: "school_id", Type: field.TypeInt64},
		{Name: "user_id", Type: field.TypeInt64},
		{Name: "reservation_status", Type: field.TypeEnum, Enums: []string{"PENDING", "APPROVED", "CANCELED"}},
		{Name: "count_student", Type: field.TypeString},
		{Name: "graduate", Type: field.TypeString},
		{Name: "subject", Type: field.TypeString},
		{Name: "remarks", Type: field.TypeString, Nullable: true},
		{Name: "reservation_confirm_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
	}
	// LessonReservationsTable holds the schema information for the "lesson_reservations" table.
	LessonReservationsTable = &schema.Table{
		Name:       "lesson_reservations",
		Columns:    LessonReservationsColumns,
		PrimaryKey: []*schema.Column{LessonReservationsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "lessonreservation_lesson_schedule_id",
				Unique:  false,
				Columns: []*schema.Column{LessonReservationsColumns[1]},
			},
			{
				Name:    "lessonreservation_school_id",
				Unique:  false,
				Columns: []*schema.Column{LessonReservationsColumns[2]},
			},
			{
				Name:    "lessonreservation_user_id",
				Unique:  false,
				Columns: []*schema.Column{LessonReservationsColumns[3]},
			},
			{
				Name:    "lessonreservation_reservation_status",
				Unique:  false,
				Columns: []*schema.Column{LessonReservationsColumns[4]},
			},
			{
				Name:    "lessonreservation_created_at",
				Unique:  false,
				Columns: []*schema.Column{LessonReservationsColumns[12]},
			},
		},
	}
	// LessonSchedulesColumns holds the columns for the "lesson_schedules" table.
	LessonSchedulesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "title", Type: field.TypeString, Size: 100},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 500},
		{Name: "location", Type: field.TypeString, Nullable: true, Size: 500},
		{Name: "lesson_type", Type: field.TypeEnum, Enums: []string{"online", "offline", "online_and_offline"}},
		{Name: "annual_max_executions", Type: field.TypeInt},
		{Name: "start_date", Type: field.TypeTime},
		{Name: "end_date", Type: field.TypeTime},
		{Name: "start_time", Type: field.TypeTime},
		{Name: "end_time", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "lesson_plan_id", Type: field.TypeInt64},
	}
	// LessonSchedulesTable holds the schema information for the "lesson_schedules" table.
	LessonSchedulesTable = &schema.Table{
		Name:       "lesson_schedules",
		Columns:    LessonSchedulesColumns,
		PrimaryKey: []*schema.Column{LessonSchedulesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "lesson_schedules_lesson_plans_schedules",
				Columns:    []*schema.Column{LessonSchedulesColumns[12]},
				RefColumns: []*schema.Column{LessonPlansColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "lessonschedule_lesson_plan_id",
				Unique:  false,
				Columns: []*schema.Column{LessonSchedulesColumns[12]},
			},
			{
				Name:    "lessonschedule_title",
				Unique:  false,
				Columns: []*schema.Column{LessonSchedulesColumns[1]},
			},
		},
	}
	// ProductsColumns holds the columns for the "products" table.
	ProductsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Size: 100},
		{Name: "price", Type: field.TypeInt},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 500},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// ProductsTable holds the schema information for the "products" table.
	ProductsTable = &schema.Table{
		Name:       "products",
		Columns:    ProductsColumns,
		PrimaryKey: []*schema.Column{ProductsColumns[0]},
	}
	// SchoolsColumns holds the columns for the "schools" table.
	SchoolsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "school_type", Type: field.TypeEnum, Enums: []string{"elementary", "juniorHigh", "highSchool"}},
		{Name: "name", Type: field.TypeString, Size: 50},
		{Name: "email", Type: field.TypeString, Nullable: true, Size: 200},
		{Name: "phone_number", Type: field.TypeString},
		{Name: "prefecture", Type: field.TypeInt},
		{Name: "city", Type: field.TypeString},
		{Name: "street", Type: field.TypeString, Nullable: true},
		{Name: "post_code", Type: field.TypeString, Size: 7},
		{Name: "url", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// SchoolsTable holds the schema information for the "schools" table.
	SchoolsTable = &schema.Table{
		Name:       "schools",
		Columns:    SchoolsColumns,
		PrimaryKey: []*schema.Column{SchoolsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "school_name",
				Unique:  false,
				Columns: []*schema.Column{SchoolsColumns[2]},
			},
			{
				Name:    "school_school_type",
				Unique:  false,
				Columns: []*schema.Column{SchoolsColumns[1]},
			},
		},
	}
	// SubjectsColumns holds the columns for the "subjects" table.
	SubjectsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "code", Type: field.TypeString, Unique: true},
		{Name: "lesson_schedule_subjects", Type: field.TypeInt64, Nullable: true},
	}
	// SubjectsTable holds the schema information for the "subjects" table.
	SubjectsTable = &schema.Table{
		Name:       "subjects",
		Columns:    SubjectsColumns,
		PrimaryKey: []*schema.Column{SubjectsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "subjects_lesson_schedules_subjects",
				Columns:    []*schema.Column{SubjectsColumns[3]},
				RefColumns: []*schema.Column{LessonSchedulesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "subject_name",
				Unique:  false,
				Columns: []*schema.Column{SubjectsColumns[1]},
			},
			{
				Name:    "subject_code",
				Unique:  false,
				Columns: []*schema.Column{SubjectsColumns[2]},
			},
		},
	}
	// UploadFilesColumns holds the columns for the "upload_files" table.
	UploadFilesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "photo_key", Type: field.TypeString},
		{Name: "user_id", Type: field.TypeInt64},
	}
	// UploadFilesTable holds the schema information for the "upload_files" table.
	UploadFilesTable = &schema.Table{
		Name:       "upload_files",
		Columns:    UploadFilesColumns,
		PrimaryKey: []*schema.Column{UploadFilesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "uploadfile_photo_key",
				Unique:  false,
				Columns: []*schema.Column{UploadFilesColumns[3]},
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "user_type", Type: field.TypeEnum, Enums: []string{"teacher", "company_member", "admin"}, Default: "teacher"},
		{Name: "first_name", Type: field.TypeString, Size: 50},
		{Name: "family_name", Type: field.TypeString, Size: 50},
		{Name: "email", Type: field.TypeString, Unique: true, Size: 100},
		{Name: "phone_number", Type: field.TypeString, Size: 20},
		{Name: "password", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "company_id", Type: field.TypeInt64, Nullable: true},
		{Name: "school_id", Type: field.TypeInt64, Nullable: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "users_companies_members",
				Columns:    []*schema.Column{UsersColumns[9]},
				RefColumns: []*schema.Column{CompaniesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "users_schools_teachers",
				Columns:    []*schema.Column{UsersColumns[10]},
				RefColumns: []*schema.Column{SchoolsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "user_first_name_family_name",
				Unique:  false,
				Columns: []*schema.Column{UsersColumns[2], UsersColumns[3]},
			},
			{
				Name:    "user_user_type",
				Unique:  false,
				Columns: []*schema.Column{UsersColumns[1]},
			},
			{
				Name:    "user_school_id",
				Unique:  false,
				Columns: []*schema.Column{UsersColumns[10]},
			},
			{
				Name:    "user_company_id",
				Unique:  false,
				Columns: []*schema.Column{UsersColumns[9]},
			},
			{
				Name:    "user_email",
				Unique:  false,
				Columns: []*schema.Column{UsersColumns[4]},
			},
		},
	}
	// LessonPlanGradesColumns holds the columns for the "lesson_plan_grades" table.
	LessonPlanGradesColumns = []*schema.Column{
		{Name: "lesson_plan_id", Type: field.TypeInt64},
		{Name: "grade_id", Type: field.TypeInt},
	}
	// LessonPlanGradesTable holds the schema information for the "lesson_plan_grades" table.
	LessonPlanGradesTable = &schema.Table{
		Name:       "lesson_plan_grades",
		Columns:    LessonPlanGradesColumns,
		PrimaryKey: []*schema.Column{LessonPlanGradesColumns[0], LessonPlanGradesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "lesson_plan_grades_lesson_plan_id",
				Columns:    []*schema.Column{LessonPlanGradesColumns[0]},
				RefColumns: []*schema.Column{LessonPlansColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "lesson_plan_grades_grade_id",
				Columns:    []*schema.Column{LessonPlanGradesColumns[1]},
				RefColumns: []*schema.Column{GradesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// LessonPlanSubjectsColumns holds the columns for the "lesson_plan_subjects" table.
	LessonPlanSubjectsColumns = []*schema.Column{
		{Name: "lesson_plan_id", Type: field.TypeInt64},
		{Name: "subject_id", Type: field.TypeInt},
	}
	// LessonPlanSubjectsTable holds the schema information for the "lesson_plan_subjects" table.
	LessonPlanSubjectsTable = &schema.Table{
		Name:       "lesson_plan_subjects",
		Columns:    LessonPlanSubjectsColumns,
		PrimaryKey: []*schema.Column{LessonPlanSubjectsColumns[0], LessonPlanSubjectsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "lesson_plan_subjects_lesson_plan_id",
				Columns:    []*schema.Column{LessonPlanSubjectsColumns[0]},
				RefColumns: []*schema.Column{LessonPlansColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "lesson_plan_subjects_subject_id",
				Columns:    []*schema.Column{LessonPlanSubjectsColumns[1]},
				RefColumns: []*schema.Column{SubjectsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// LessonPlanEducationCategoriesColumns holds the columns for the "lesson_plan_education_categories" table.
	LessonPlanEducationCategoriesColumns = []*schema.Column{
		{Name: "lesson_plan_id", Type: field.TypeInt64},
		{Name: "education_category_id", Type: field.TypeInt},
	}
	// LessonPlanEducationCategoriesTable holds the schema information for the "lesson_plan_education_categories" table.
	LessonPlanEducationCategoriesTable = &schema.Table{
		Name:       "lesson_plan_education_categories",
		Columns:    LessonPlanEducationCategoriesColumns,
		PrimaryKey: []*schema.Column{LessonPlanEducationCategoriesColumns[0], LessonPlanEducationCategoriesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "lesson_plan_education_categories_lesson_plan_id",
				Columns:    []*schema.Column{LessonPlanEducationCategoriesColumns[0]},
				RefColumns: []*schema.Column{LessonPlansColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "lesson_plan_education_categories_education_category_id",
				Columns:    []*schema.Column{LessonPlanEducationCategoriesColumns[1]},
				RefColumns: []*schema.Column{EducationCategoriesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CompaniesTable,
		EducationCategoriesTable,
		EmailVerificationsTable,
		GradesTable,
		InquiriesTable,
		LessonPlansTable,
		LessonReservationsTable,
		LessonSchedulesTable,
		ProductsTable,
		SchoolsTable,
		SubjectsTable,
		UploadFilesTable,
		UsersTable,
		LessonPlanGradesTable,
		LessonPlanSubjectsTable,
		LessonPlanEducationCategoriesTable,
	}
)

func init() {
	EducationCategoriesTable.ForeignKeys[0].RefTable = LessonSchedulesTable
	GradesTable.ForeignKeys[0].RefTable = LessonSchedulesTable
	InquiriesTable.ForeignKeys[0].RefTable = LessonPlansTable
	InquiriesTable.ForeignKeys[1].RefTable = SchoolsTable
	InquiriesTable.ForeignKeys[2].RefTable = UsersTable
	LessonPlansTable.ForeignKeys[0].RefTable = CompaniesTable
	LessonSchedulesTable.ForeignKeys[0].RefTable = LessonPlansTable
	SubjectsTable.ForeignKeys[0].RefTable = LessonSchedulesTable
	UsersTable.ForeignKeys[0].RefTable = CompaniesTable
	UsersTable.ForeignKeys[1].RefTable = SchoolsTable
	LessonPlanGradesTable.ForeignKeys[0].RefTable = LessonPlansTable
	LessonPlanGradesTable.ForeignKeys[1].RefTable = GradesTable
	LessonPlanSubjectsTable.ForeignKeys[0].RefTable = LessonPlansTable
	LessonPlanSubjectsTable.ForeignKeys[1].RefTable = SubjectsTable
	LessonPlanEducationCategoriesTable.ForeignKeys[0].RefTable = LessonPlansTable
	LessonPlanEducationCategoriesTable.ForeignKeys[1].RefTable = EducationCategoriesTable
}
